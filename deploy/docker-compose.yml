#
# Caddy + App full-stack deployment (production) using Docker Compose.
#
# Changes made:
# - Added Caddy (TLS/HTTPS) reverse proxy container
# - Added MySQL with persisted volume
# - Wired backend to MySQL via env-var override for datasource URL
# - Wired frontend behind Caddy
# - Added Portainer UI proxied by Caddy
#
# @LLM_USAGE Fully LLM generated.
# @LLM_USAGE Compose refined by LLM: base/override model; removed version key.



services:
  caddy:
    image: caddy:2
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - frontend
      - backend
      - portainer

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: jocks-karaoke
    volumes:
      - mysql-data:/var/lib/mysql
    expose:
      - "3306"

  backend:
    image: aldoink/jocks-karaoke:backend_1.0.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/jocks-karaoke
    expose:
      - "9090"
    depends_on:
      - mysql

  frontend:
    image: aldoink/jocks-karaoke:frontend_3.0.0
    restart: always
    expose:
      - "3000"
    depends_on:
      - backend

  portainer:
    image: portainer/portainer-ce:2.11.1
    restart: always
    expose:
      - "9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data

volumes:
  caddy-data:
  caddy-config:
  mysql-data:
  portainer-data:


